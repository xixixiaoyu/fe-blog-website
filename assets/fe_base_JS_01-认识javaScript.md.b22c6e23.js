import{_ as a,c as s,o,V as l}from"./chunks/framework.9b53f02e.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"fe_base/JS/01-认识javaScript.md","filePath":"fe_base/JS/01-认识javaScript.md","lastUpdated":1684136293000}'),n={name:"fe_base/JS/01-认识javaScript.md"},t=l(`<h2 id="认识-javascript" tabindex="-1">认识 Javascript <a class="header-anchor" href="#认识-javascript" aria-label="Permalink to &quot;认识 Javascript&quot;">​</a></h2><h3 id="javascript-简史" tabindex="-1">javascript 简史 <a class="header-anchor" href="#javascript-简史" aria-label="Permalink to &quot;javascript 简史&quot;">​</a></h3><blockquote><p>JavaScript 诞生于 1995 年。</p><p>JavaScript 是一种基于对象和事件驱动的客户端脚本语言,</p><p>最初的设计是为了检验 HTML 表单输入的正确性,</p><p>起源于 Netscape 公司的 LiveScript 语言。</p></blockquote><p>ECMAScript 欧洲计算机制造商协会</p><p>1997 年 1 月 - ECMAScript1 诞生</p><p>1998 年 1 月 - ECMAScript2 修正</p><p>1999 年 12 月 - ECMAScript3 修正</p><p>（ECMAscript4 由于关于语言的复杂性出现分歧,第 4 版本被放弃,其中的部分成为了第 5 版本的基础）</p><p>2009 年 - ECMAScript5 修正</p><p>2015 年 - ECMAScript6 修正（也称为 ES2015）</p><p>从 2015 开始每年例行更新</p><p>我们现在要学习的是 ES5，之后会学习 ES6 。</p><p>ie 等极少数浏览器不支持 ES6</p><p><em>js 就是 javascript 的简写</em></p><h3 id="什么是编程语言" tabindex="-1">什么是编程语言? <a class="header-anchor" href="#什么是编程语言" aria-label="Permalink to &quot;什么是编程语言?&quot;">​</a></h3><p>总结：编程语言就是让计算机执行一些任务的特殊指令</p><h3 id="为什么学习-javascript" tabindex="-1">为什么学习 JavaScript？ <a class="header-anchor" href="#为什么学习-javascript" aria-label="Permalink to &quot;为什么学习 JavaScript？&quot;">​</a></h3><blockquote><p>全世界几乎所有网页都使用 JavaScript</p></blockquote><h4 id="广泛的使用领域" tabindex="-1">广泛的使用领域 <a class="header-anchor" href="#广泛的使用领域" aria-label="Permalink to &quot;广泛的使用领域&quot;">​</a></h4><blockquote><p><strong>浏览器的平台化</strong></p><p>不再仅仅能浏览网页，而是越来越像一个平台，JavaScript 因此得以调用许多系统功能，比如操作本地文件、操作图片、调用摄像头和麦克风等等。</p><p><strong>Node</strong></p><p>Node 项目使得 JavaScript 可以用于开发服务器端的大型项目</p><p><strong>数据库操作</strong></p><p>JavaScript 甚至也可以用来操作数据库,大部分 NoSQL 数据库允许 JavaScript 直接操作</p><p><strong>移动平台开发</strong></p><p>JavaScript 也正在成为手机应用的开发语言</p><p><strong>跨平台的桌面应用程序</strong></p><p>著名程序员 Jeff Atwood 甚至提出了一条 <a href="http://www.codinghorror.com/blog/2007/07/the-principle-of-least-power.html" target="_blank" rel="noreferrer">“Atwood 定律”</a>：</p><p>“所有可以用 JavaScript 编写的程序，最终都会出现 JavaScript 的版本。”</p></blockquote><h4 id="易学性" tabindex="-1">易学性 <a class="header-anchor" href="#易学性" aria-label="Permalink to &quot;易学性&quot;">​</a></h4><ul><li><strong>学习环境无处不在</strong></li></ul><p>只要有浏览器，就能运行 JavaScript 程序；只要有文本编辑器，就能编写 JavaScript 程序。</p><ul><li><strong>简单性</strong></li></ul><p>本身的语法特性并不是特别多。你完全可以只用简单命令，完成大部分的操作。</p><ul><li><strong>与主流语言的相似性</strong></li></ul><p>JavaScript 的语法很类似 C/C++ 和 Java，如果学过这些语言,JavaScript 的入门会非常容易。</p><h4 id="强大的性能" tabindex="-1">强大的性能 <a class="header-anchor" href="#强大的性能" aria-label="Permalink to &quot;强大的性能&quot;">​</a></h4><ul><li><strong>灵活的语法，表达力强</strong></li><li><strong>支持编译运行</strong></li></ul><blockquote><p>在现代浏览器中，JavaScript 都是编译后运行。程序会被高度优化，运行效率接近二进制程序。</p></blockquote><h4 id="社区支持和就业机会" tabindex="-1">社区支持和就业机会 <a class="header-anchor" href="#社区支持和就业机会" aria-label="Permalink to &quot;社区支持和就业机会&quot;">​</a></h4><blockquote><p>全世界程序员都在使用 JavaScript，它有着极大的社区、广泛的文献和图书、丰富的代码资源。</p><p>作为项目负责人，你不难招聘到数量众多的 JavaScript 程序员；</p><p>作为开发者，你也不难找到一份 JavaScript 的工作。</p></blockquote><h3 id="主流浏览器" tabindex="-1">主流浏览器 <a class="header-anchor" href="#主流浏览器" aria-label="Permalink to &quot;主流浏览器&quot;">​</a></h3><p>IE/Edge、Chrome、Firefox、Safari、Opera （国内各浏览器介绍).</p><p>常用的：chrome、Firefox、ie（系统自带）</p><p>其他浏览器：360 浏览器（chrome 和 ie 的内核）、qq 浏览器、搜狗浏览器。</p><p>百度统计：<a href="https://tongji.baidu.com/data/browser" target="_blank" rel="noreferrer">浏览器市场份额</a>。</p><ul><li>浏览器组成-外壳</li></ul><p>界面、菜单、网络、调试功能……</p><ul><li>浏览器组成-内核</li></ul><p>浏览器内核：</p><table><thead><tr><th>浏览器</th><th>渲染引擎</th><th>JS 引擎</th></tr></thead><tbody><tr><td>IE</td><td>Trident</td><td>JScript -&gt; Chakra</td></tr><tr><td>Firefox</td><td>Gecko</td><td>Monkey 系列</td></tr><tr><td>Chrome</td><td>Webkit -&gt; Blink</td><td>V8</td></tr><tr><td>Safari</td><td>Webkit</td><td>SquirrelFish 系列</td></tr><tr><td>Opera</td><td>Presto -&gt; Blink</td><td>Carakan</td></tr></tbody></table><p>渲染引擎：将 html 和 css 代码渲染成图形界面</p><p>js 引擎：解析 js 代码</p><p>V8 引擎为解析 js 代码最快的 js 引擎</p><h3 id="v8-引擎与-nodejs" tabindex="-1">V8 引擎与 nodejs <a class="header-anchor" href="#v8-引擎与-nodejs" aria-label="Permalink to &quot;V8 引擎与 nodejs&quot;">​</a></h3><blockquote><p>我们写 javascript -&gt; 在 chrome 中通过 V8 引擎编译 -&gt; 机器语言（用二进制代码表示的计算机能直接识别和执行的一种机器指令）</p><p>Chrome 浏览器中用来解析 JavaScript 的引擎就是 V8 引擎,有了 V8 引擎 JavaScript 才能在计算机上执行</p><p>所以，正是有了 V8 引擎的解析， javascript 才能在计算机上执行</p><p>那么，从本质上讲，javascript 的执行需要的不是浏览器，而是 V8 引擎</p><p>所以，我们把 V8 引擎 单独安装在系统上，那么 javascript 就可以直接在系统上运行</p><p>=&gt; 也就获得了直接操作电脑本地数据的能力，也就可以完成后端的工作</p><p>=&gt; 这个独立出来的 V8 引擎，再加上一些其他的功能就变成了 nodejs</p></blockquote><h3 id="基础问题" tabindex="-1">基础问题 <a class="header-anchor" href="#基础问题" aria-label="Permalink to &quot;基础问题&quot;">​</a></h3><ul><li><strong>JavaScript 是什么</strong></li></ul><blockquote><p>专业一点：JavaScript 一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言。</p><p>通俗一点：JS 是前端代码中最重要的部分（行为层），常用来<em>操作 HTML 页面</em>，<em>响应用户的操作</em>，<em>验证传输数据</em>等。</p></blockquote><ul><li><strong>Java 和 JavaScript 有什么关系</strong></li></ul><blockquote><p>没有太大的关系……是两种不一样的语言,但是彼此存在联系。</p><p>JavaScript 的基本语法和对象体系，是模仿 Java 而设计的。</p><p>它最初叫 Mocha， 接着改名为 LiveScript，最后才确定命名为 JavaScript， 目的之一就是“看上去像 Java”</p></blockquote><ul><li><strong>jQuery（JQ）和 JS 有什么关系?</strong></li></ul><blockquote><p>jQuery 是由 JS 编写的……，js 和 jq 可以同时编写</p></blockquote><ul><li><strong>NodeJs 和 JS 有什么关系</strong></li></ul><blockquote><p>NodeJs 是后端语言，以 JS 代码来驱动 C 语言实现后端功能……，降低了前段人员学习后端的难度</p></blockquote><ul><li><strong>ECMAScript 和 JavaScript 的关系</strong></li></ul><blockquote><p>前者是后者的规格，后者是前者的一种实现。在日常场合，这两个词是可以互换的。ECMAScript 只用来标准化 JavaScript 这种语言的基本语法结构。</p></blockquote><h3 id="javascript-的组成" tabindex="-1">javascript 的组成 <a class="header-anchor" href="#javascript-的组成" aria-label="Permalink to &quot;javascript 的组成&quot;">​</a></h3><ul><li>核心（ECMAScript）：提供核心语言功能，规定语法规范。</li><li>文档对象模型（DOM）：提供访问和操作网页元素的方法和接口，由 html 页面中的标签组成</li><li>浏览器对象模型（BOM）：提供与浏览器交互的方法与接口，即浏览器中前进、后退、刷新等功能</li></ul><h3 id="开发工具" tabindex="-1">开发工具 <a class="header-anchor" href="#开发工具" aria-label="Permalink to &quot;开发工具&quot;">​</a></h3><blockquote><p>开发工具：WebStorm、sublime、HBuilder、vscode、atom 等（<strong>推荐使用 vscode</strong>）</p><p>vscode 下载地址： <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">https://code.visualstudio.com/</a> ，根据自己的操作系统下载相应的版本。</p><p>不推荐使用 DW（Dreamweaver），EditPlus（没有提示功能，影响开发效率）</p></blockquote><h3 id="vscode" tabindex="-1">vscode <a class="header-anchor" href="#vscode" aria-label="Permalink to &quot;vscode&quot;">​</a></h3><blockquote><p>VS Code 这款软件本身，是用 JavaScript 语言编写的</p><p>Jeff Atwood 在 2007 年提出了著名的 Atwood 定律：</p><p><strong>任何能够用 JavaScript 实现的应用系统，最终都必将用 JavaScript 实现</strong>。</p><p>如果你是做前端开发（JavaScript 编程语言为主),这款软件是为前端同学量身定制的。</p></blockquote><h4 id="vscode-常用插件" tabindex="-1">vscode 常用插件： <a class="header-anchor" href="#vscode-常用插件" aria-label="Permalink to &quot;vscode 常用插件：&quot;">​</a></h4><blockquote><p><strong>chinese</strong> 汉化插件</p><p><strong>open in browser</strong> 右键打开浏览器</p><p><strong>Live Server</strong> 开启自动刷新功能</p><p><strong>Prettier</strong> 代码格式化 让代码的展示更加美观</p><p><strong>vscode-icons</strong> 根据文件的后缀名来显示不同的图标</p><p><strong>Bracket Pair Colorizer 2 ** 以不同颜色显示成对的括号，并用连线标注括号范围。简称</strong>彩虹括号**。</p><p><strong>CSS Peak</strong> 在 HTML 通过对应标签的名字快速跳转到对应的 CSS</p><p><strong>Image preview</strong> 图片预览</p></blockquote><h4 id="快捷键" tabindex="-1">快捷键 <a class="header-anchor" href="#快捷键" aria-label="Permalink to &quot;快捷键&quot;">​</a></h4><p><strong>基操</strong></p><blockquote><p><strong>ctrl+c</strong> 复制 <strong>ctrl+V</strong> 粘贴 <strong>ctrl+s</strong> 保存 <strong>ctrl+x</strong>剪切 也可以用于删除整行</p><p><strong>ctrl+z</strong> 返回上一步 <strong>ctrl+y</strong> 撤销返回上一步</p><p><strong>ctrl + f</strong> 查询/替换</p><p><img src="https://s1.ax1x.com/2020/09/05/wE6cz8.png" alt="wE6cz8.png"></p></blockquote><p><strong>跳转操作</strong></p><blockquote><p><strong>Cmd +Pagedown/Pageup</strong> 在已经打开的多个文件之间进行 非常实用</p><p><strong>Ctrl + Tab</strong> 在已经打开的多个文件之间进行</p></blockquote><p><strong>移动光标</strong></p><blockquote><p><strong>方向键</strong> 在单个字符之间移动光标 地球人都知道</p><p><strong>Alt ＋鼠标点击任意位</strong> 在任意位置，同时出现光标</p><p><strong>Ctrl + D</strong> 将全文中相同的词逐一加入选择</p></blockquote><p><strong>工作区快捷键</strong></p><blockquote><p><strong>Cmd +B</strong> 显示/隐藏侧边栏 很实用</p><p><strong><em>Ctrl + \\</em></strong> 创建多个编辑器</p><p><strong>Cmd + Shift+N</strong> 重新开一个软件的窗口</p><p><strong>Ctrl + W</strong> 关闭当前文件</p></blockquote><p><strong>其他快捷键</strong></p><blockquote><p><strong>shift + alt + f</strong> 代码格式化快捷键</p><p><strong>shift + alt + ↓</strong> 向下复制一份 ： 选中要复制的内容</p></blockquote><p><strong>鼠标操作</strong></p><blockquote><p>在当前行的位置，鼠标三击，可以选中当前行。</p><p>用鼠标单击文件的<strong>行号</strong>，可以选中当前行。</p></blockquote><p><strong>快捷键列表</strong></p><p><img src="https://s1.ax1x.com/2020/09/05/wErkUx.png" alt="wErkUx.png"></p><h3 id="markdown-文件" tabindex="-1">markdown 文件 <a class="header-anchor" href="#markdown-文件" aria-label="Permalink to &quot;markdown 文件&quot;">​</a></h3><blockquote><p>下载并安装 Typora/马克飞象 进行查看 .md 文件</p></blockquote><h3 id="引入-javascript" tabindex="-1">引入 javascript <a class="header-anchor" href="#引入-javascript" aria-label="Permalink to &quot;引入 javascript&quot;">​</a></h3><h4 id="_1-内部引入" tabindex="-1">1.内部引入 <a class="header-anchor" href="#_1-内部引入" aria-label="Permalink to &quot;1.内部引入&quot;">​</a></h4><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  html标签部分 ... ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">          js代码块部分</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">//script标签最好写在 head 标签 或 body 标签中，</span></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">//如果放在head或body外，浏览器在解析时，也会将script标签放在head或body中。</span></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">//script标签通常放在body的最后面。</span></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;">// 页面的解析是按顺序解析的，所以若在 body 前获取dom元素，则需要使用 window.onload</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h4 id="_2-外部引入" tabindex="-1">2.外部引入 <a class="header-anchor" href="#_2-外部引入" aria-label="Permalink to &quot;2.外部引入&quot;">​</a></h4><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  &lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">&lt;!-- 注意不能是单标签</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">		若使用外部引入js文件的方式，script标签中的代码块不会被解析</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">	--&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h4 id="_3-标签内引入" tabindex="-1">3.标签内引入 <a class="header-anchor" href="#_3-标签内引入" aria-label="Permalink to &quot;3.标签内引入&quot;">​</a></h4><blockquote><p>假设我们想响应用户的操作（比如点击）可以直接把 is 代码写在标签属性里面</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">onclick</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#82AAFF;">alert</span><span style="color:#C3E88D;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">div被点击了</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">哈哈哈</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">// 没有特殊情况，不建议使用此方法</span></span></code></pre></div><h3 id="console-控制台输出" tabindex="-1">console 控制台输出 <a class="header-anchor" href="#console-控制台输出" aria-label="Permalink to &quot;console 控制台输出&quot;">​</a></h3><ul><li>console.log 普通输出</li></ul><p><code>console.log</code>方法用于在控制台输出信息。它可以接受一个或多个参数，将它们连接起来输出。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Hello World</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// a b c</span></span></code></pre></div><p><code>console.log</code>方法会自动在每次输出的结尾，添加换行符。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3</span></span></code></pre></div><blockquote><p>console.info 前面出现蓝色标记（ 在 chrome 上与 console.log 无区别）</p><p>console.warn 输出背景为黄色，警告信息</p><p>console.error 输出背景为红色，错误信息</p><p>console.dir 可以显示一个对象所有的属性和方法。</p><p>console.log()可以取代 alert()或 document.write()，在网页脚本中使用 console.log()时，会在浏览器控制台打印出信息。</p></blockquote><h3 id="注释、弹窗" tabindex="-1">注释、弹窗 <a class="header-anchor" href="#注释、弹窗" aria-label="Permalink to &quot;注释、弹窗&quot;">​</a></h3><p>单引号和双引号需要配对，不能单引号配对双引号</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 单行注释 （常用）    --&gt;   注意不是返斜杠 \\\\</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 单行注释  浏览器自动换行也算单行</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> 多行注释</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 弹窗</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//很少在一个发布的项目中使用弹窗</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//调试阶段会经常用到  遇到调试代码较多 建议使用console</span></span>
<span class="line"><span style="color:#82AAFF;">alert</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">这是弹出的内容</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">ALERT</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">错误写法，严格区分大小写</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输入弹窗  不会使用  了解一下</span></span>
<span class="line"><span style="color:#82AAFF;">prompt</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入内容</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 确认弹窗</span></span>
<span class="line"><span style="color:#82AAFF;">confirm</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">是否确认</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="js-注意事项" tabindex="-1">js 注意事项 <a class="header-anchor" href="#js-注意事项" aria-label="Permalink to &quot;js 注意事项&quot;">​</a></h3><ul><li>严格区分大小写 ( x=1;X=1; x 和 X 不是同一个变量)</li><li>语法字符使用英文半角字符</li><li>缩进对齐</li><li>分号结尾 （可以不加，看个人或团队开发习惯而定，极少数场景不加会报错）</li></ul><h3 id="网站概述" tabindex="-1">网站概述 <a class="header-anchor" href="#网站概述" aria-label="Permalink to &quot;网站概述&quot;">​</a></h3><h4 id="网站的组成" tabindex="-1">网站的组成 <a class="header-anchor" href="#网站的组成" aria-label="Permalink to &quot;网站的组成&quot;">​</a></h4><p>从开发者的角度来看，web 应用主要由三部分组成：用户界面，业务逻辑，数据。</p><ol><li>用户界面 (视图层)：用于将数据展示给用户的地方，采用 HTML，CSS，JavaScript 编写。</li><li>业务逻辑 (控制层)：实现业务需求和控制业务流程的地方，可以采用 Java, PHP, Python, JavaScript 编写。</li><li>数据 (模型层)：应用的核心部分, 应用业务逻辑的实现，用户界面的展示都是基于数据的， web 应 用中的数据通常是存储在数据库中的，数据库可以采用 MySql, Mongodb 等。</li></ol><h4 id="什么是-web-服务器" tabindex="-1">什么是 web 服务器 <a class="header-anchor" href="#什么是-web-服务器" aria-label="Permalink to &quot;什么是 web 服务器&quot;">​</a></h4><p>服务器是指能够向外部(局域网或者万维网)提供服务的机器(计算机)就是服务器。</p><p>在硬件层面，web 服务器就是能够向外部提供网站访问服务的计算机。</p><p>在这台计算机中存储了网站运行所必须的代码文件和资源文件。</p><p>在软件层面，web 服务器控制着用户如何访问网站中的资源文件，控制着用户如何与网站进行交互。</p><h4 id="客户端" tabindex="-1">客户端 <a class="header-anchor" href="#客户端" aria-label="Permalink to &quot;客户端&quot;">​</a></h4><p>web 应用中的客户端是指用户界面的载体，实际上就是浏览器。</p><p>用户可以通过浏览器这个客户端访问网站应用的界面，通过用户界面与网站应用进行交互。</p><h4 id="网站的运行" tabindex="-1">网站的运行 <a class="header-anchor" href="#网站的运行" aria-label="Permalink to &quot;网站的运行&quot;">​</a></h4><p>web 应用是基于请求和响应模型的。</p><p><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/image-20211216005701931.png" alt="image-20211216005701931"></p><h4 id="ip-和域名" tabindex="-1">IP 和域名 <a class="header-anchor" href="#ip-和域名" aria-label="Permalink to &quot;IP 和域名&quot;">​</a></h4><p>Internet Protocol address：互联网协议地址，标识网络中设备的地址，具有唯一性。例如: 45.113.192.101</p><p><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/image-20211216005732180.png" alt="image-20211216005732180"></p><p>域名 (Domain Name)：是由一串用点分隔的字符组成的互联网上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位 (摘自维基百科)。</p><p>ping www.baidu.com</p><h4 id="dns-服务器" tabindex="-1">DNS 服务器 <a class="header-anchor" href="#dns-服务器" aria-label="Permalink to &quot;DNS 服务器&quot;">​</a></h4><p>Domain Name Server：域名服务器，互联网域名解析系统，它可以将&quot;人类可识别&quot;的标识符映射为系统内部通常为数字形式的标识码。(摘自维基百科)</p><p><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/image-20211216005827871.png" alt="image-20211216005827871"></p><h4 id="端口" tabindex="-1">端口 <a class="header-anchor" href="#端口" aria-label="Permalink to &quot;端口&quot;">​</a></h4><p>是设备与外界通讯交流的出口，此处特指计算机中的虚拟端口。0 ~ 65535</p><p>比如在一座大厦当中有很多房间，每间房间都提供着不同的服务，我们可以通过房间号找到提供不同服务的房间。</p><p>服务器就是这座大厦，在服务器中可以提供很多服务，比如 web 访问服务，邮件的收发服务，文件的上传下载服务，用户在找到服务器以后如何去找具体的服务呢？答案就是端口号，端口号就是大厦中的房间号，在服务器中通过端口号区分不同的服务。</p><p>也就是说，服务器中的各种应用，要想向外界提供服务，必须要占用一个端口号。</p><p>通常 web 应用占用 80 端口，在浏览器中访问应用时 80 可以省略，因为默认就访问 80。</p><h4 id="url" tabindex="-1">URL <a class="header-anchor" href="#url" aria-label="Permalink to &quot;URL&quot;">​</a></h4><p>URL：统一资源定位符，表示我们要访问的资源在哪以及要访问的资源是什么。 protocol://hostname[:port]/path <a href="http://www.example.com/index.htm" target="_blank" rel="noreferrer">http://www.example.com/index.htm</a></p><h4 id="台前和后台-前端与后端" tabindex="-1">台前和后台, 前端与后端 <a class="header-anchor" href="#台前和后台-前端与后端" aria-label="Permalink to &quot;台前和后台, 前端与后端&quot;">​</a></h4><p>前台和后台都是指用户界面。前台是为客户准备的，每个人都可以访问的用户界面。后台是为网站管理员准备的，只有登录以后才能访问的用户界面，用于管理网站应用中的数据。</p><p>前端是指开发客户端应用的程序员。</p><p>后端是指开发服务器端应用程序的程序员。</p><h4 id="开发环境说明" tabindex="-1">开发环境说明 <a class="header-anchor" href="#开发环境说明" aria-label="Permalink to &quot;开发环境说明&quot;">​</a></h4><p>在开发环境中，开发者机器既充当了客户端的角色又充当了服务器的角色。</p><p>本机 IP: 127.0.0.1</p><p>本机域名: localhost</p>`,142),p=[t];function e(r,c,i,d,h,y){return o(),s("div",null,p)}const g=a(n,[["render",e]]);export{D as __pageData,g as default};
