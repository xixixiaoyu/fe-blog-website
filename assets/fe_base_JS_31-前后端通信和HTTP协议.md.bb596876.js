import{_ as a,c as s,o,V as l}from"./chunks/framework.9b53f02e.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"fe_base/JS/31-前后端通信和HTTP协议.md","filePath":"fe_base/JS/31-前后端通信和HTTP协议.md","lastUpdated":1684136293000}'),t={name:"fe_base/JS/31-前后端通信和HTTP协议.md"},p=l(`<h2 id="课程简介" tabindex="-1">课程简介 <a class="header-anchor" href="#课程简介" aria-label="Permalink to &quot;课程简介&quot;">​</a></h2><p><strong>前后端通信</strong></p><blockquote><p>初识前后端通信</p><p>前后端通信的过程与概念解释</p><p>前后端的通信方式</p></blockquote><p><strong>HTTP 协议</strong></p><blockquote><p>初识 HTTP</p><p><strong>HTTP 报文</strong></p><p>HTTP 方法</p><p><strong>GET 和 POST 方法的对比</strong></p><p>HTTP 状态码</p></blockquote><h2 id="_1-初识前后端通信" tabindex="-1">1.初识前后端通信 <a class="header-anchor" href="#_1-初识前后端通信" aria-label="Permalink to &quot;1.初识前后端通信&quot;">​</a></h2><ul><li><p>前后端通信是什么</p></li><li><p>后端向前端发送数据</p></li><li><p>前端向后端发送数据</p></li></ul><h3 id="_1-前后端通信是什么" tabindex="-1">1.前后端通信是什么 <a class="header-anchor" href="#_1-前后端通信是什么" aria-label="Permalink to &quot;1.前后端通信是什么&quot;">​</a></h3><blockquote><p>前端和后端数据交互的过程</p><p>浏览器和服务器之间数据交互的过程</p></blockquote><h3 id="_2-后端向前端发送数据" tabindex="-1">2.后端向前端发送数据 <a class="header-anchor" href="#_2-后端向前端发送数据" aria-label="Permalink to &quot;2.后端向前端发送数据&quot;">​</a></h3><blockquote><p>访问页面</p></blockquote><p><a href="https://imgchr.com/i/BTt6Ds" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/BTt6Ds.png" alt="BTt6Ds.png"></a></p><h3 id="_3-前端向后端发送数据" tabindex="-1">3.前端向后端发送数据 <a class="header-anchor" href="#_3-前端向后端发送数据" aria-label="Permalink to &quot;3.前端向后端发送数据&quot;">​</a></h3><blockquote><p>用户注册</p></blockquote><p><a href="https://imgchr.com/i/BTNkIP" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/BTNkIP.png" alt="BTNkIP.png"></a></p><h2 id="_2-前后端通信的过程与概念解释" tabindex="-1">2.前后端通信的过程与概念解释 <a class="header-anchor" href="#_2-前后端通信的过程与概念解释" aria-label="Permalink to &quot;2.前后端通信的过程与概念解释&quot;">​</a></h2><ul><li><p>前后端通信的过程</p></li><li><p>概念解释</p></li></ul><h3 id="_1-前后端通信的过程" tabindex="-1">1.前后端通信的过程 <a class="header-anchor" href="#_1-前后端通信的过程" aria-label="Permalink to &quot;1.前后端通信的过程&quot;">​</a></h3><blockquote><p>前后端的通信是在‘请求-响应’中完成的</p></blockquote><p><a href="https://imgchr.com/i/DHvYUH" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/DHvYUH.png" alt="DHvYUH.png"></a></p><p><a href="https://imgchr.com/i/DbeMRK" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/DbeMRK.png" alt="DbeMRK.png"></a></p><h3 id="_2-概念解释" tabindex="-1">2.概念解释 <a class="header-anchor" href="#_2-概念解释" aria-label="Permalink to &quot;2.概念解释&quot;">​</a></h3><blockquote><p>前端：浏览器端</p><p>客户端：只要能和服务器通信的就叫客户端</p><p>​ 命令行工具 ​</p><p>后端：服务器端</p></blockquote><h2 id="_3-前后端的通信方式" tabindex="-1">3.前后端的通信方式 <a class="header-anchor" href="#_3-前后端的通信方式" aria-label="Permalink to &quot;3.前后端的通信方式&quot;">​</a></h2><ul><li><p>使用浏览器访问网页</p></li><li><p>HTML 的标签</p></li><li><p>Ajax 和 Fetch</p></li></ul><h3 id="_1-使用浏览器访问网页" tabindex="-1">1.使用浏览器访问网页 <a class="header-anchor" href="#_1-使用浏览器访问网页" aria-label="Permalink to &quot;1.使用浏览器访问网页&quot;">​</a></h3><blockquote><p>在浏览器地址栏输入网址，按下回车</p></blockquote><h3 id="_2-html-的标签" tabindex="-1">2.HTML 的标签 <a class="header-anchor" href="#_2-html-的标签" aria-label="Permalink to &quot;2.HTML 的标签&quot;">​</a></h3><blockquote><p>浏览器在解析 HTML 标签的时候，遇到一些特殊的标签，会再次向服务器发送请求</p><p><strong>link / img / script / iframe</strong></p></blockquote><p><a href="https://imgchr.com/i/BTUW1U" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/BTUW1U.png" alt="BTUW1U.png"></a></p><p><a href="https://imgchr.com/i/BTaF9f" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/BTaF9f.png" alt="BTaF9f.png"></a></p><p><strong>还有一些标签，浏览器解析的时候，不会向服务器发送请求，但是用户可以使用他们向服务器发送请求</strong></p><blockquote><p>a/form</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://www.bilibili.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">bilibili一下</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">action</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://www.shiguangkey.com/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">method</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">username</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户名</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">密码</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">submit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">注册</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="_3-ajax-和-fetch" tabindex="-1">3.Ajax 和 Fetch <a class="header-anchor" href="#_3-ajax-和-fetch" aria-label="Permalink to &quot;3.Ajax 和 Fetch&quot;">​</a></h3><h2 id="_4-初识-http" tabindex="-1">4.初识 HTTP <a class="header-anchor" href="#_4-初识-http" aria-label="Permalink to &quot;4.初识 HTTP&quot;">​</a></h2><ul><li><p>HTTP 是什么</p></li><li><p>HTTP 请求响应的过程</p></li></ul><h3 id="_1-http-是什么" tabindex="-1">1.HTTP 是什么 <a class="header-anchor" href="#_1-http-是什么" aria-label="Permalink to &quot;1.HTTP 是什么&quot;">​</a></h3><blockquote><p>HyperText Transfer Protocol 超文本传输协议</p><p>HTML：超文本标记语言</p><p><strong>超文本：原先一个个单一的文本，通过超链接将其联系起来。由原先的单一的文本变成了可无限延伸、扩展的超级文本、立体文本</strong></p><p>HTML、JS、CSS、图片、字体、音频、视频等等文件，都是通过 HTTP（超文本传输协议） 在服务器和浏览器之间传输</p><p>每一次前后端通信，前端需要主动向后端发出请求，后端接收到前端的请求后，可以给出响应</p><p>HTTP 是一个请求-响应协议</p></blockquote><h3 id="_2-http-请求响应的过程" tabindex="-1">2.HTTP 请求响应的过程 <a class="header-anchor" href="#_2-http-请求响应的过程" aria-label="Permalink to &quot;2.HTTP 请求响应的过程&quot;">​</a></h3><blockquote><p><a href="https://www.bilibili.com" target="_blank" rel="noreferrer">https://www.bilibili.com</a></p></blockquote><p><a href="https://imgchr.com/i/BTdoJx" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/BTdoJx.png" alt="BTdoJx.png"></a></p><h2 id="_5-http-报文" tabindex="-1">5.HTTP 报文 <a class="header-anchor" href="#_5-http-报文" aria-label="Permalink to &quot;5.HTTP 报文&quot;">​</a></h2><ul><li><p>HTTP 报文是什么</p></li><li><p><strong>HTTP 报文格式</strong></p></li></ul><h3 id="_1-http-报文是什么" tabindex="-1">1.HTTP 报文是什么 <a class="header-anchor" href="#_1-http-报文是什么" aria-label="Permalink to &quot;1.HTTP 报文是什么&quot;">​</a></h3><blockquote><p>浏览器向服务器发送请求时，请求本身就是信息，叫请求报文</p><p>服务器向浏览器发送响应时传输的信息，叫响应报文</p></blockquote><h3 id="_2-http-报文格式" tabindex="-1">2.HTTP 报文格式 <a class="header-anchor" href="#_2-http-报文格式" aria-label="Permalink to &quot;2.HTTP 报文格式&quot;">​</a></h3><blockquote><p>请求</p><p>请求头：起始行+首部</p><p>请求体</p><p>响应</p><p>响应头：起始行+首部</p><p>响应体</p></blockquote><p><a href="https://imgchr.com/i/BTwXcT" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/BTwXcT.png" alt="BTwXcT.png"></a></p><p><a href="https://imgchr.com/i/B7bX59" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/B7bX59.png" alt="B7bX59.png"></a></p><blockquote><p>GET 请求，没有请求体，数据通过请求头携带</p><p>POST 请求，有请求体，数据可以通过请求体携带</p></blockquote><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">action</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://www.baidu.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">method</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">get</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">username</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户名</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">密码</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">submit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">注册</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">action</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://www.baidu.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">method</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">post</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">username</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户名</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">密码</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">submit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">注册</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="_6-http-方法" tabindex="-1">6.HTTP 方法 <a class="header-anchor" href="#_6-http-方法" aria-label="Permalink to &quot;6.HTTP 方法&quot;">​</a></h2><ul><li>常用的 HTTP 方法</li><li>HTTP 方法的语义</li><li>RESTful 接口设计</li></ul><h3 id="_1-常用的-http-方法" tabindex="-1">1.常用的 HTTP 方法 <a class="header-anchor" href="#_1-常用的-http-方法" aria-label="Permalink to &quot;1.常用的 HTTP 方法&quot;">​</a></h3><blockquote><p>浏览器<strong>发送请求时采用的方法</strong>，和响应无关</p><p><strong>GET、POST、PUT、DELETE</strong></p><p>用来定义对于资源采取什么样的操作的，有各自的语义</p></blockquote><h3 id="_2-http-方法的语义" tabindex="-1">2.HTTP 方法的语义 <a class="header-anchor" href="#_2-http-方法的语义" aria-label="Permalink to &quot;2.HTTP 方法的语义&quot;">​</a></h3><blockquote><p>GET 获取数据 ===&gt; ( 获取资源（文件）)</p><p>POST 创建数据 ====&gt; 注册</p><p>PUT 更新数据 ===&gt; 修改个人信息，修改密码</p><p>DELETE 删除数据 ===&gt; 删除一条评论</p><p><strong>总结: 增删改查</strong></p><p>这些方法虽然有各自的语义，但是并不是强制性的</p></blockquote><h3 id="_3-restful-接口设计" tabindex="-1">3.RESTful 接口设计 <a class="header-anchor" href="#_3-restful-接口设计" aria-label="Permalink to &quot;3.RESTful 接口设计&quot;">​</a></h3><blockquote><p>一种接口设计风格，充分利用 HTTP 方法的语义</p></blockquote><p><strong>通过用户 ID 获取个人信息，使用 GET 方法</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">https://www.baidu.com/api/http/getUser?id=1</span></span></code></pre></div><p><strong>注册新用户，使用 POST 方法</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">https://www.baidu.com/api/http/addUser</span></span></code></pre></div><p><strong>修改一个用户，使用 POST 方法</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">https://www.baidu.com/api/http/modifyUser</span></span></code></pre></div><p><strong>删除一个用户，使用 POST 方法</strong></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">https://www.baidu.com/api/http/deleteUser</span></span></code></pre></div><p><strong>使用 RESTful 接口设计</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//GET</span></span>
<span class="line"><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//www.baidu.com/api/http/user?id=1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//POST</span></span>
<span class="line"><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//www.baidu.com/api/http/user</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//PUT</span></span>
<span class="line"><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//www.baidu.com/api/http/user</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//DELETE</span></span>
<span class="line"><span style="color:#FFCB6B;">https</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//www.baidu.com/api/http/user</span></span></code></pre></div><h2 id="_7-get-和-post-方法的对比" tabindex="-1">7.GET 和 POST 方法的对比 <a class="header-anchor" href="#_7-get-和-post-方法的对比" aria-label="Permalink to &quot;7.GET 和 POST 方法的对比&quot;">​</a></h2><ul><li>语义</li><li><strong>发送数据</strong></li><li>缓存</li><li><strong>安全性</strong></li></ul><h3 id="_1-语义" tabindex="-1">1.语义 <a class="header-anchor" href="#_1-语义" aria-label="Permalink to &quot;1.语义&quot;">​</a></h3><blockquote><p>GET：获取数据</p><p>POST：创建数据</p></blockquote><h3 id="_2-发送数据" tabindex="-1">2.发送数据 <a class="header-anchor" href="#_2-发送数据" aria-label="Permalink to &quot;2.发送数据&quot;">​</a></h3><blockquote><p>GET 通过地址在请求头中携带数据</p><p>能携带的数据量和地址的长度有关系，一般最多就几 K</p></blockquote><blockquote><p>POST 既可以通过地址在请求头中携带数据，也可以通过</p><p>请求体携带数据</p><p>能携带的数据量理论上是无限的</p></blockquote><p><strong>携带少量数据，可以使用 GET 请求，大量的数据可以使用 POST 请求</strong></p><h3 id="_3-缓存" tabindex="-1">3.缓存 <a class="header-anchor" href="#_3-缓存" aria-label="Permalink to &quot;3.缓存&quot;">​</a></h3><blockquote><p>GET 可以被缓存，POST 不会被缓存</p></blockquote><h3 id="_4-安全性" tabindex="-1">4.安全性 <a class="header-anchor" href="#_4-安全性" aria-label="Permalink to &quot;4.安全性&quot;">​</a></h3><blockquote><p>GET 和 POST 都不安全</p><p>发送密码或其他敏感信息时不要使用 GET，主要是避免直接被他人窥屏或通过历史记录找到你的密码</p></blockquote><h2 id="_8-http-状态码" tabindex="-1">8.HTTP 状态码 <a class="header-anchor" href="#_8-http-状态码" aria-label="Permalink to &quot;8.HTTP 状态码&quot;">​</a></h2><ul><li>HTTP 状态码是什么</li><li>HTTP 状态码的语义</li></ul><h3 id="_1-http-状态码是什么" tabindex="-1">1.HTTP 状态码是什么 <a class="header-anchor" href="#_1-http-状态码是什么" aria-label="Permalink to &quot;1.HTTP 状态码是什么&quot;">​</a></h3><blockquote><p>定义服务器对请求的处理结果，是服务器返回的</p></blockquote><h3 id="_2-http-状态码的语义" tabindex="-1">2.HTTP 状态码的语义 <a class="header-anchor" href="#_2-http-状态码的语义" aria-label="Permalink to &quot;2.HTTP 状态码的语义&quot;">​</a></h3><blockquote><p><strong>100~199 消息</strong>：代表请求已被接受，需要继续处理</p><p>​ websocket 全双工通信的协议</p><p><strong>200~299 成功</strong></p><p>**300~399 重定向 **</p><p>301 Moved Permanently</p><p>302 Move Temporarily</p><p>304 Not Modified</p><p><a href="http://www.baidu.com/" target="_blank" rel="noreferrer">http://www.baidu.com/</a></p><p><a href="https://www.baidu.com/" target="_blank" rel="noreferrer">https://www.baidu.com/</a></p><p><strong>400~499 请求错误</strong> 404 Not Found</p><p><strong>500~599 服务器错误</strong> 500 Internal Server Error</p></blockquote><h2 id="课程总结" tabindex="-1">课程总结 <a class="header-anchor" href="#课程总结" aria-label="Permalink to &quot;课程总结&quot;">​</a></h2><h3 id="前后端通信" tabindex="-1">前后端通信 <a class="header-anchor" href="#前后端通信" aria-label="Permalink to &quot;前后端通信&quot;">​</a></h3><p><a href="https://imgchr.com/i/DHvYUH" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/DHvYUH.png" alt="DHvYUH.png"></a></p><h3 id="前后端的通信方式" tabindex="-1">前后端的通信方式 <a class="header-anchor" href="#前后端的通信方式" aria-label="Permalink to &quot;前后端的通信方式&quot;">​</a></h3><blockquote><p>使用浏览器访问网页</p><p>link、img. script、a、form 等 HTML 的标签</p><p>Ajax 和 Fetch</p></blockquote><h3 id="http-协议" tabindex="-1">HTTP 协议 <a class="header-anchor" href="#http-协议" aria-label="Permalink to &quot;HTTP 协议&quot;">​</a></h3><blockquote><p>HTML、JS、CSS、图片等文件，都是通过 HTTP 在服务器和浏览器之间传输</p><p>HTTP 是一个请求-响应协议</p></blockquote><h3 id="http-请求响应的过程" tabindex="-1">HTTP 请求响应的过程 <a class="header-anchor" href="#http-请求响应的过程" aria-label="Permalink to &quot;HTTP 请求响应的过程&quot;">​</a></h3><p><a href="https://imgchr.com/i/BTdoJx" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/BTdoJx.png" alt="BTdoJx.png"></a>](<a href="https://imgchr.com/i/BTdoJx" target="_blank" rel="noreferrer">https://imgchr.com/i/BTdoJx</a>)</p><h3 id="http-报文" tabindex="-1">HTTP 报文 <a class="header-anchor" href="#http-报文" aria-label="Permalink to &quot;HTTP 报文&quot;">​</a></h3><p><a href="https://imgchr.com/i/BTwXcT" target="_blank" rel="noreferrer"><img src="https://raw.githubusercontent.com/xixixiaoyu/CloundImg2/main/BTwXcT.png" alt="BTwXcT.png"></a></p><h3 id="http-方法" tabindex="-1">HTTP 方法 <a class="header-anchor" href="#http-方法" aria-label="Permalink to &quot;HTTP 方法&quot;">​</a></h3><blockquote><p>GET 获取数据</p><p>PUT 更新数据</p><p>POST 创建数据</p><p>DELETE 删除数据</p></blockquote><h3 id="get-和-post-方法的对比" tabindex="-1">GET 和 POST 方法的对比 <a class="header-anchor" href="#get-和-post-方法的对比" aria-label="Permalink to &quot;GET 和 POST 方法的对比&quot;">​</a></h3><blockquote><p>GET 表示获取数据，POST 表示创建数据</p><p>GET 通过地址在请求头中携带数据</p><p>POST 既可以通过地址在请求头中携带数据，也可以通过请求体携带数据</p><p>GET 可以被缓存，POST 不会被缓存</p><p>发送密码或其他敏感信息时不要使用 GET</p></blockquote><h3 id="http-状态码" tabindex="-1">HTTP 状态码 <a class="header-anchor" href="#http-状态码" aria-label="Permalink to &quot;HTTP 状态码&quot;">​</a></h3><blockquote><p>100~199 消息:代表请求已被接受，需要继续处理</p><p>200~299 成功</p><p>300~399 重定向</p><p>400~499 请求错误</p><p>500~599 服务器错误</p></blockquote>`,105),n=[p];function e(r,c,i,D,h,F){return o(),s("div",null,n)}const d=a(t,[["render",e]]);export{y as __pageData,d as default};
